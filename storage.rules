rules_version = '2';

// Best Practice: Explicitly deny access by default and grant specific access.
service firebase.storage {
  match /b/{bucket}/o {

    // Match any file in the root or any subfolder (deny by default)
    match /{allPaths=**} {
      allow read, write: if false; // Deny all access by default
    }

    // Allow authenticated users to read and write files in their own 'audiobooks' folder
    // Path: /audiobooks/{userId}/{fileName}
    match /audiobooks/{userId}/{fileName} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to read and write generated audio files in their own 'audiobooks_generated' folder
    // Path: /audiobooks_generated/{userId}/{fileName}
    match /audiobooks_generated/{userId}/{fileName} {
       allow read: if request.auth != null && request.auth.uid == userId; // Allow reading their own generated audio
       allow write: if request.auth != null && request.auth.uid == userId; // Allow write access (e.g., for server-side generation/update)
    }

    // Note: The default deny rule above handles cases not matched by the specific rules.
    // You might add more specific rules here if needed for other paths.
  }
}
